# Target: Python
# Generated by bubbler
# DO NOT EDIT

import struct
from enum import Enum
from typing import List


# ====================== RovSonarSwitchData ======================

# Struct: RovSonarSwitchData [1] {1 fields}
class RovSonarSwitchData:
    def __init__(self):
        # [0:1) NormalField: bool open_sonar[1]
        self._open_sonar: bool = False

    @staticmethod
    def size() -> int:
        return 1

    # RawGetter: open_sonar
    @property
    def open_sonar(self) -> bool:
        return self._open_sonar

    # RawSetter: open_sonar
    @open_sonar.setter
    def open_sonar(self, value: bool) -> None:
        self._open_sonar = value

    # Encoder: RovSonarSwitchData
    def encode(self) -> bytearray:
        data = bytearray(1)
        # [0:1) NormalField: bool open_sonar[1]
        data[0] = (((((self._open_sonar >> 0) & 255) >> 0) << 0) & 255)
        return data

    # Decoder: RovSonarSwitchData
    def decode(self, data: bytearray) -> bool:
        # [0:1) NormalField: bool open_sonar[1]
        self._open_sonar = (((data[0] & 255) >> 0) << 0)
        return True

# ==================== End RovSonarSwitchData ====================

# ====================== RovRpiSwitchData ======================

# Struct: RovRpiSwitchData [1] {1 fields}
class RovRpiSwitchData:
    def __init__(self):
        # [0:1) NormalField: bool shutdown_raspberry[1]
        self._shutdown_raspberry: bool = False

    @staticmethod
    def size() -> int:
        return 1

    # RawGetter: shutdown_raspberry
    @property
    def shutdown_raspberry(self) -> bool:
        return self._shutdown_raspberry

    # RawSetter: shutdown_raspberry
    @shutdown_raspberry.setter
    def shutdown_raspberry(self, value: bool) -> None:
        self._shutdown_raspberry = value

    # Encoder: RovRpiSwitchData
    def encode(self) -> bytearray:
        data = bytearray(1)
        # [0:1) NormalField: bool shutdown_raspberry[1]
        data[0] = (((((self._shutdown_raspberry >> 0) & 255) >> 0) << 0) & 255)
        return data

    # Decoder: RovRpiSwitchData
    def decode(self, data: bytearray) -> bool:
        # [0:1) NormalField: bool shutdown_raspberry[1]
        self._shutdown_raspberry = (((data[0] & 255) >> 0) << 0)
        return True

# ==================== End RovRpiSwitchData ====================

